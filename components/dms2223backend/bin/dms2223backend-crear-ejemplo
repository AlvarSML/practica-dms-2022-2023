#!/usr/bin/env python3

from dms2223backend.data.config import BackendConfiguration
from dms2223backend.data.db import Base, Schema
from dms2223backend.data.db import Usuario, Pregunta, Reporte, ReportePregunta, Respuesta, Comentario, Voto, Feedback

from sqlalchemy.orm.session import Session  # type: ignore
from sqlalchemy import select, Table, Column, Integer, String, MetaData # type: ignore

from datetime import datetime

import json

cfg: BackendConfiguration = BackendConfiguration()
cfg.load_from_file(cfg.default_config_file())
db: Schema = Schema(base=Base,config=cfg)

db.clear_database(cfg)
session:Session = db.new_session()


us1 = Usuario(nombre="Alvar")
us2 = Usuario(nombre="Bilal")

session.add(us1)
session.add(us2)

session.commit()

p1 = Pregunta(
    titulo="Pregunta de Alvar",
    contenido="Que significa X?",
    autor=us1
)

p2 = Pregunta(
    titulo="Pregunta de Bilal",
    contenido="Que significa Y?",
    autor=us2
)

session.add(p1)
session.add(p2)
session.commit()

r1 = Respuesta(
    contenido="X significa algo",
    pregunta=p1,
    autor=us1
)

r2 = Respuesta(
    contenido="Y significa algo",
    pregunta=p1,
    autor=us2
)

session.add(r1)
session.add(r2)
session.commit()


fpos = Feedback(
    descripcion="POSITIVE",
    color_asociado="#00FF00"
)

fneg = Feedback(
    descripcion="NEGATIVE",
    color_asociado="#FF0000"
)

fneu = Feedback(
    descripcion="NEUTRAL",
    color_asociado="#aaaaaa"
)

session.add(fpos)
session.add(fneg)
session.add(fneu)
session.commit()

c1 = Comentario(
    contenido="Hmmm bien hecho",
    autor=us1,
    feedback=2,
    respuesta=r1
)

c2 = Comentario(
    contenido="Hmmm bien hecho",
    autor=us1,
    feedback=1,
    respuesta=r1
)

session.add(c1)
session.add(c2)
session.commit()

r1 = ReportePregunta(
    pregunta=p1,
    autor=us1,
    razon_reporte="no me gusta"
)

session.add(r1)
session.commit()

def print_tabla(tabla):
    stmt = select('*').select_from(tabla)
    result = session.execute(stmt).fetchall()

    print("tabla: "+tabla.__tablename__)
    for p in result:
        print(p)


print_tabla(Pregunta)
print_tabla(Usuario)
print_tabla(Respuesta)
print_tabla(Comentario)
print_tabla(ReportePregunta)

