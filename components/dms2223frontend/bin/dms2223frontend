#!/usr/bin/env python3 
from dms2223frontend.data.clases.pregunta import Pregunta
from flask import Flask, request, current_app
import inspect
import os
from typing import Dict
import dms2223frontend
from dms2223frontend.data.config import FrontendConfiguration
from dms2223frontend.data.rest import AuthService, BackendService
from dms2223frontend.presentation.web import \
    AdminEndpoints, CommonEndpoints, SessionEndpoints, \
    DiscussionEndpoints, ModeratorEndpoints
from dms2223frontend.presentation.web import PreguntasEndpoints, RespuestasEndpoints,\
    ModeratorEndpoints


cfg: FrontendConfiguration = FrontendConfiguration()
cfg.load_from_file(cfg.default_config_file())

auth_service_cfg: Dict = cfg.get_auth_service()
auth_service: AuthService = AuthService(
    auth_service_cfg['host'], auth_service_cfg['port'],
    apikey_header='X-ApiKey-Auth',
    apikey_secret=auth_service_cfg['apikey_secret']
)

backend_service_cfg: Dict = cfg.get_backend_service()
backend_service: BackendService = BackendService(
    host = backend_service_cfg['host'], 
    port = backend_service_cfg['port'],
    apikey_header='X-ApiKey-Backend',
    apikey_secret=backend_service_cfg['apikey_secret']
)


app = Flask(
    __name__,
    static_folder=os.path.dirname(
        inspect.getfile(dms2223frontend)) + '/static',
    template_folder=os.path.dirname(
        inspect.getfile(dms2223frontend)) + '/templates'
)
# Alvar [4/11/2022]
app.config["TESTING"] = True
app.testing=True
app.config.update(
    TEMPLATES_AUTO_RELOAD = True
)


app.secret_key = bytes(cfg.get_app_secret_key(), 'ascii')

# Alvar [4/11/2022]
@app.route("/", methods=['GET'])
def get_default():
    return CommonEndpoints.get_inicio(
        back_service=backend_service
        )
    #return CommonEndpoints.get_home(auth_service)

@app.route("/login", methods=['GET'])
def get_login():
    return SessionEndpoints.get_login(auth_service)

@app.route("/login", methods=['POST'])
def post_login():
    return SessionEndpoints.post_login(auth_service)

@app.route("/logout", methods=['GET'])
def get_logout():
    return SessionEndpoints.get_logout()

@app.route("/home", methods=['GET'])
def get_home():
    return CommonEndpoints.get_home(
        auth_service=auth_service,
        back_service=backend_service
        )

@app.route("/discussion", methods=['GET'])
def get_discussion():
    return DiscussionEndpoints.get_discussion(auth_service)

@app.route("/moderator", methods=['GET'])
def get_moderator():
    return ModeratorEndpoints.get_moderator(
        auth_service=auth_service,
        back_service=backend_service)

@app.route("/admin", methods=['GET'])
def get_admin():
    return AdminEndpoints.get_admin(auth_service)

@app.route("/admin/users", methods=['GET'])
def get_admin_users():
    return AdminEndpoints.get_admin_users(auth_service)

@app.route("/admin/users/new", methods=['GET'])
def get_admin_users_new():
    return AdminEndpoints.get_admin_users_new(auth_service)

@app.route("/admin/users/new", methods=['POST'])
def post_admin_users_new():
    return AdminEndpoints.post_admin_users_new(auth_service)

@app.route("/admin/users/edit", methods=['GET'])
def get_admin_users_edit():
    return AdminEndpoints.get_admin_users_edit(auth_service)

@app.route("/admin/users/edit", methods=['POST'])
def post_admin_users_edit():
    return AdminEndpoints.post_admin_users_edit(auth_service)

"""
@app.route("/respuesta/<id_respuesta>",methods=['GET'])
def get_respuesta(id_respuesta):
    return RespuestasEndpoints.get_respuesta(auth_service,id_respuesta)
"""

@app.route("/crear_pregunta", methods=['GET'])
def get_crear_preguntas():
    return PreguntasEndpoints.get_crear_pregunta(
        auth_service=auth_service,
        back_service=backend_service
    )

@app.route("/crear_pregunta", methods=['POST'])
def post_crear_preguntas():
    current_app.logger.debug("crear_pregunta")
    return PreguntasEndpoints.post_new_question(
        auth_service=auth_service,
        back_service=backend_service
    )


# Alvar [16/11/2022]
@app.route("/pregunta/<id_preg>",methods=['GET'])
def get_pregunta(id_preg):
    return PreguntasEndpoints.get_pregunta(
        auth_service=auth_service,
        back_service=backend_service,
        id_preg=id_preg)

@app.route("/pregunta/<id_preg>/crear_respuesta",methods=['GET'])
def crear_respuesta_get(id_preg):
    """ Formulario de respuesta
    """
    return PreguntasEndpoints.get_crear_respuesta(
        auth_service=auth_service,
        back_service=backend_service,
        qid=id_preg)

@app.route("/pregunta/<id_preg>/crear_respuesta",methods=['POST'])
def crear_pregunta_post(id_preg):
    current_app.logger.debug("crear_pregunta")
    return PreguntasEndpoints.post_new_answer(
        auth_service=auth_service,
        back_service=backend_service
    )

@app.route("/respuesta/<id_resp>/crear_comentario",methods=['GET'])
def crear_comentario_get(id_resp):
    """ Formulario de comentario
    """
    return PreguntasEndpoints.get_crear_comentario(
        auth_service=auth_service,
        back_service=backend_service,
        aid=id_resp)


@app.route("/respuesta/<id_resp>/crear_comentario",methods=['POST'])
def crear_comentario_post(id_resp):
    """ Creacion de comentario
    """
    current_app.logger.debug("crear_comentario")
    return PreguntasEndpoints.post_new_comment(
        auth_service=auth_service,
        back_service=backend_service,
        aid=id_resp
    )

""" REPORTES
"""

@app.route("/pregunta/<id_preg>/reporte", methods=['GET'])
def crear_reporte_preg_get(id_preg:int):
    """ Formulario de creacion de reporte
    """
    return ModeratorEndpoints.get_report_form(
        auth_service=auth_service,
        back_service=backend_service,
        eid=id_preg,
        tipo="pregunta"
    )

@app.route("/pregunta/<id_preg>/reporte", methods=['POST'])
def crear_reporte_preg_post(id_preg:int):
    """ Envio de creacion de reporte
    """
    return ModeratorEndpoints.post_report(
        auth_service=auth_service,
        back_service=backend_service
    )

@app.route("/respuesta/<id_resp>/reporte", methods=['GET'])
def crear_reporte_resp_get(id_resp:int):
    """ Formulario de creacion de reporte
    """
    return ModeratorEndpoints.get_report_form(
        auth_service=auth_service,
        back_service=backend_service,
        eid=id_resp,
        tipo="respuesta"
    )

@app.route("/respuesta/<id_resp>/reporte", methods=['POST'])
def crear_reporte_resp_post(id_resp:int):
    """ Envio de creacion de reporte
    """
    return ModeratorEndpoints.post_report(
        auth_service=auth_service,
        back_service=backend_service
    )

@app.route("/comentario/<id_comm>/reporte", methods=['GET'])
def crear_reporte_comm_get(id_comm:int):
    """ Formulario de creacion de reporte
    """
    return ModeratorEndpoints.get_report_form(
        auth_service=auth_service,
        back_service=backend_service,
        eid=id_comm,
        tipo="comentario"
    )

@app.route("/comentario/<id_comm>/reporte", methods=['POST'])
def crear_reporte_comm_post(id_comm:int):
    """ Envio de creacion de reporte
    """
    return ModeratorEndpoints.post_report(
        auth_service=auth_service,
        back_service=backend_service
    )


@app.route("/respuestas/reportes", methods=['GET'])
def reportes_respuestas_get():
    return ModeratorEndpoints.get_reps_respuestas(
        auth_service=auth_service,
        back_service=backend_service)


@app.route("/cmentarios/reportes", methods=['GET'])
def reportes_comentarios_get():
    return ModeratorEndpoints.get_reps_comentarios(
        auth_service=auth_service,
        back_service=backend_service)


@app.route("/pregunta/reportes/<id_rep>", methods=['POST'])
def cambio_estado_rep_pregunta_put(id_rep):
    return ModeratorEndpoints.put_estado_preg(
        auth_service=auth_service,
        back_service=backend_service)

@app.route("/respuesta/reportes/<id_rep>", methods=['POST'])
def cambio_estado_rep_respuesta_put(id_rep):
    return ModeratorEndpoints.put_estado_resp(
        auth_service=auth_service,
        back_service=backend_service)

@app.route("/comentario/reportes/<id_rep>", methods=['POST'])
def cambio_estado_rep_comentario_put(id_rep):
    return ModeratorEndpoints.put_estado_comm(
        auth_service=auth_service,
        back_service=backend_service)

@app.route("/respuesta/<id_resp>/voto/<id_preg>", methods=['GET'])
def vota_respuesta(id_resp,id_preg):
    return PreguntasEndpoints.vota_elemento(
        auth_service=auth_service,
        back_service=backend_service,
        eid=id_resp,
        pid=id_preg,
        tipo="answers"
    )

@app.route("/comentario/<id_comm>/voto/<id_preg>", methods=['GET'])
def vota_comentario(id_comm,id_preg):
    return PreguntasEndpoints.vota_elemento(
        auth_service=auth_service,
        back_service=backend_service,
        eid=id_comm,
        pid=id_preg,
        tipo="comments"
    )

if __name__ == '__main__':
    app.run(
        host=cfg.get_service_host(),
        port=cfg.get_service_port(),
        debug=cfg.get_debug_flag()
    )
