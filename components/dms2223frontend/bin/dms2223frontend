#!/usr/bin/env python3
from pregunta import Pregunta
from flask import Flask, request
import inspect
import os
from typing import Dict
import dms2223frontend
from dms2223frontend.data.config import FrontendConfiguration
from dms2223frontend.data.rest import AuthService, BackendService
from dms2223frontend.presentation.web import \
    AdminEndpoints, CommonEndpoints, SessionEndpoints, DiscussionEndpoints, ModeratorEndpoints

cfg: FrontendConfiguration = FrontendConfiguration()
cfg.load_from_file(cfg.default_config_file())

auth_service_cfg: Dict = cfg.get_auth_service()
auth_service: AuthService = AuthService(
    auth_service_cfg['host'], auth_service_cfg['port'],
    apikey_header='X-ApiKey-Auth',
    apikey_secret=auth_service_cfg['apikey_secret']
)

backend_service_cfg: Dict = cfg.get_backend_service()
backend_service: BackendService = BackendService(
    backend_service_cfg['host'], backend_service_cfg['port'],
    apikey_header='X-ApiKey-Backend',
    apikey_secret=backend_service_cfg['apikey_secret']
)

app = Flask(
    __name__,
    static_folder=os.path.dirname(
        inspect.getfile(dms2223frontend)) + '/static',
    template_folder=os.path.dirname(
        inspect.getfile(dms2223frontend)) + '/templates'
)
# Alvar [4/11/2022]
app.config["TESTING"] = True
app.testing=True
app.config.update(
    TEMPLATES_AUTO_RELOAD = True
)


app.secret_key = bytes(cfg.get_app_secret_key(), 'ascii')

# Alvar [4/11/2022]
@app.route("/", methods=['GET'])
def get_default():
    return CommonEndpoints.get_inicio()
    #return CommonEndpoints.get_home(auth_service)

@app.route("/login", methods=['GET'])
def get_login():
    return SessionEndpoints.get_login(auth_service)

@app.route("/login", methods=['POST'])
def post_login():
    return SessionEndpoints.post_login(auth_service)

@app.route("/logout", methods=['GET'])
def get_logout():
    return SessionEndpoints.get_logout()

@app.route("/home", methods=['GET'])
def get_home():
    return CommonEndpoints.get_home(auth_service)

@app.route("/discussion", methods=['GET'])
def get_discussion():
    return DiscussionEndpoints.get_discussion(auth_service)

@app.route("/moderator", methods=['GET'])
def get_moderator():
    return ModeratorEndpoints.get_moderator(auth_service)

@app.route("/admin", methods=['GET'])
def get_admin():
    return AdminEndpoints.get_admin(auth_service)

@app.route("/admin/users", methods=['GET'])
def get_admin_users():
    return AdminEndpoints.get_admin_users(auth_service)

@app.route("/admin/users/new", methods=['GET'])
def get_admin_users_new():
    return AdminEndpoints.get_admin_users_new(auth_service)

@app.route("/admin/users/new", methods=['POST'])
def post_admin_users_new():
    return AdminEndpoints.post_admin_users_new(auth_service)

@app.route("/admin/users/edit", methods=['GET'])
def get_admin_users_edit():
    return AdminEndpoints.get_admin_users_edit(auth_service)

@app.route("/admin/users/edit", methods=['POST'])
def post_admin_users_edit():
    return AdminEndpoints.post_admin_users_edit(auth_service)

# Alvar [16/11/2022]
@app.route("/pregunta",method=['GET'])
def obtener_pregunta():
    id=request.args.get('id')
    return id

if __name__ == '__main__':
    app.run(
        host=cfg.get_service_host(),
        port=cfg.get_service_port(),
        debug=cfg.get_debug_flag()
    )
